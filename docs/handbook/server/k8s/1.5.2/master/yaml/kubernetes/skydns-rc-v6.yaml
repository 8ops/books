apiVersion: v1
kind: ReplicationController
metadata:
  name: kube-dns-v6
  namespace: kube-system
  labels:
    k8s-app: kube-dns
    version: v6
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  selector:
    k8s-app: kube-dns
    version: v6
  template:
    metadata:
      labels:
        k8s-app: kube-dns
        version: v6
        kubernetes.io/cluster-service: "true"
    spec:
      dnsPolicy: Default
      containers:
      - name: etcd
        image: r.8ops.cc/kubernetes/etcd-amd64:2.2.1
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        - -listen-client-urls
        - http://0.0.0.0:2379,http://0.0.0.0:4001
        - -advertise-client-urls
        - http://127.0.0.1:2379,http://127.0.0.1:4001
        - -initial-cluster-token
        - skydns-etcd
      - name: kube2sky
        image: r.8ops.cc/kubernetes/kube2sky-amd64:1.15
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
        command:
        - /kube2sky
        - --kube_master_url=http://10.10.10.36:8080
        - --domain=cluster.local
      - name: skydns
        image: r.8ops.cc/kubernetes/skydns:2015-10-13-8c72f8c
        imagePullPolicy: IfNotPresent
#        command:
#        - /skydns
        args:
        - "/skydns"
        - -machines=http://127.0.0.1:4001
        - -addr=0.0.0.0:53
        - -domain=cluster.local
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
      - name: healthz
        image: r.8ops.cc/kubernetes/exechealthz-amd64:1.0
        imagePullPolicy: IfNotPresent
        args:
        - -cmd=nslookup kubernetes.default.svc.cluster.local 127.0.0.1 > /dev/null
        - -port=8080
        ports:
        - containerPort: 8080
          protocol: TCP
