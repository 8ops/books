apiVersion: v1
items:
- apiVersion: v1
  data:
    app.conf: |
      appname = PrometheusAlertCenter
      login_user=admin
      login_password=jesse
      httpaddr = "0.0.0.0"
      httpport = 8080
      open-weixin=1
      wxurl=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=d38f3a90-2b86-4d48-a9c7-228e1e89d416
  kind: ConfigMap
  metadata:
    labels:
      app.kubernetes.io/instance: prometheus-alert-center
      app.kubernetes.io/name: prometheus-alert-center
    name: prometheus-alert-center
    namespace: kube-server
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: prometheus-alert-center
      app.kubernetes.io/name: prometheus-alert-center
      app.kubernetes.io/version: v4.8
    name: prometheus-alert-center
    namespace: kube-server
  spec:
    replicas: 1
    revisionHistoryLimit: 5
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus-alert-center
        app.kubernetes.io/name: prometheus-alert-center
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: prometheus-alert-center
          app.kubernetes.io/name: prometheus-alert-center
      spec:
        automountServiceAccountToken: true
        containers:
        - image: hub.8ops.top/prometheus/prometheus-alert-center:v4.8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: prometheus-alert-center
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
          volumeMounts:
          - mountPath: /app/conf/app.conf
            name: config
            subPath: app.conf
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-alert-center
          name: config
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
    labels:
      app.kubernetes.io/instance: prometheus-alert-center
      app.kubernetes.io/name: prometheus-alert-center
    name: prometheus-alert-center
    namespace: kube-server
  spec:
    ports:
    - name: service
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: prometheus-alert-center
      app.kubernetes.io/name: prometheus-alert-center
    type: ClusterIP
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus-alert-center
      meta.helm.sh/release-namespace: kube-server
    labels:
      app.kubernetes.io/instance: prometheus-alert-center
      app.kubernetes.io/name: prometheus-alert-center
    name: prometheus-alert-center
    namespace: kube-server
  spec:
    ingressClassName: external
    rules:
    - host: prometheus-alert-center.8ops.top
      http:
        paths:
        - backend:
            service:
              name: prometheus-alert-center
              port:
                number: 8080
          path: /
          pathType: Prefix
    tls:
    - hosts:
      - prometheus-alert-center.8ops.top
      secretName: tls-8ops.top
kind: List
